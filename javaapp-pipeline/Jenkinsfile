pipeline {
    agent {label 'docker'}


environment {
        DOCKER_IMAGE_NAME = "pranayme/jenkins_test"
        DOCKER_HUB_CREDENTIALS = "Docker_user"   // DockerHub creds ID in Jenkins
        IMAGE_TAG = "latest" // Or use a dynamic tag like "${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/pranay-meka/jenkins_docker.git'
            }
        }

        // stage('Sonar Analysis') {
        //     steps {
        //         dir('javaapp-pipeline') {
        //             withSonarQubeEnv('sonar') {
        //                 sh '''
        //                     mvn clean verify sonar:sonar \
        //                     -Dsonar.projectKey=java-app \
        //                     -Dsonar.projectName=java-app 
        //                 '''
        //             }
        //         }
        //     }
        // }

        stage('Build') {
            steps {
                dir('javaapp-pipeline') {
                    sh 'docker build -t ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKER_HUB_CREDENTIALS}") {
                        app.push("${env.BUILD_NUMBER}")
                        app.push("latest")
                    }
                    //script {
                    //withCredentials([usernamePassword(credentialsId: env.DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        //sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                       // sh "docker push ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
                       // sh "docker logout"
                   // }
                }
                    }
                }

        stage('Pull and Deploy') {
            steps {
                sh 'docker pull ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}'
                sh 'docker run -itd -p 5000:5000 ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}'
                }
            }
        }

    }
